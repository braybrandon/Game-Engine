# .github/workflows/release-please.yml
name: Release Please

on:
  push:
    branches:
      - master

permissions:
  contents: write # Needed for creating/updating releases, tags, and uploading assets
  pull-requests: write # Needed for creating Release PRs
  issues: write # Needed for release-please to apply labels
  packages: write # Needed for pushing packages to GitHub Packages

jobs:
  release-please:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for release-please to analyze full history

      - name: Run Release Please
        uses: googleapis/release-please-action@v4.2.0
        id: release # ID to access outputs like release_created, version, html_url
        with:
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json

      - name: Setup .NET SDK
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore dependencies
        if: ${{ steps.release.outputs.release_created }}
        run: dotnet restore GameEngine.sln

      - name: Build Solution
        if: ${{ steps.release.outputs.release_created }}
        run: dotnet build GameEngine.sln --configuration Release --no-restore

      - name: Pack All NuGet packages with Release Version
        if: ${{ steps.release.outputs.release_created }}
        run: |
          RELEASE_VERSION="${{ steps.release.outputs.version }}"
          echo "Packing NuGet packages with version: $RELEASE_VERSION"
          dotnet pack GameEngine.sln --configuration Release --output .nupkg /p:Version=$RELEASE_VERSION --no-build

      - name: Push All NuGet packages to GitHub Packages
        if: ${{ steps.release.outputs.release_created }}
        run: dotnet nuget push .nupkg/*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --skip-duplicate

      - name: Update GitHub Release Description with Links
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/github-script@v7
        with:
          script: |
            const { release } = context.payload;
            const releaseId = release.id;
            const currentBody = release.body || '';
            
            const REPO_OWNER = context.repo.owner;
            const REPO_NAME = context.repo.repo;
            
            const footerContent = `
## Package Links

**GitHub Packages:**

- [GameEngine.AI](https://github.com/${REPO_OWNER}/${REPO_NAME}/packages/GameEngine.AI)
- [GameEngine.Animation](https://github.com/${REPO_OWNER}/${REPO_NAME}/packages/GameEngine.Animation)
- [GameEngine.Assets](https://github.com/${REPO_OWNER}/${REPO_NAME}/packages/GameEngine.Assets)
- [GameEngine.Audio](https://github.com/${REPO_OWNER}/${REPO_NAME}/packages/GameEngine.Audio)
- [GameEngine.Core](https://github.com/${REPO_OWNER}/${REPO_NAME}/packages/GameEngine.Core)
- [GameEngine.Input](https://github.com/${REPO_OWNER}/${REPO_NAME}/packages/GameEngine.Input)
- [GameEngine.Particles](https://github.com/${REPO_OWNER}/${REPO_NAME}/packages/GameEngine.Particles)
- [GameEngine.Physics](https://github.com/${REPO_OWNER}/${REPO_NAME}/packages/GameEngine.Physics)
- [GameEngine.Rendering](https://github.com/${REPO_OWNER}/${REPO_NAME}/packages/GameEngine.Rendering)
- [GameEngine.SaveLoad](https://github.com/${REPO_OWNER}/${REPO_NAME}/packages/GameEngine.SaveLoad)
- [GameEngine.Scene](https://github.com/${REPO_OWNER}/${REPO_NAME}/packages/GameEngine.Scene)
- [GameEngine.State](https://github.com/${REPO_OWNER}/${REPO_NAME}/packages/GameEngine.State)
- [GameEngine.Tiles](https://github.com/${REPO_OWNER}/${REPO_NAME}/packages/GameEngine.Tiles)
- [GameEngine.UI](https://github.com/${REPO_OWNER}/${REPO_NAME}/packages/GameEngine.UI)
- [GameEnginePlayground](https://github.com/${REPO_OWNER}/${REPO_NAME}/packages/GameEnginePlayground)

**Direct Downloads (Release Assets):**

- [View Source Code Assets for this Release](${release.html_url}#assets)
`;
            
            const newBody = currentBody + '\n\n' + footerContent;
            
            console.log(`Updating release ${releaseId} with new body...`);
            
            try {
              await github.rest.repos.updateRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: releaseId,
                body: newBody
              });
              console.log(`Successfully updated release ${releaseId} description.`);
            } catch (error) {
              console.error(`Failed to update release ${releaseId}: ${error.message}`);
              core.setFailed(`Failed to update release ${releaseId}: ${error.message}`);
            }
          github-token: ${{ secrets.GITHUB_TOKEN }}
